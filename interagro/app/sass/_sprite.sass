// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-down-h-name: 'arrow-down-h'
$arrow-down-h-x: 0px
$arrow-down-h-y: 55px
$arrow-down-h-offset-x: 0px
$arrow-down-h-offset-y: -55px
$arrow-down-h-width: 11px
$arrow-down-h-height: 6px
$arrow-down-h-total-width: 63px
$arrow-down-h-total-height: 61px
$arrow-down-h-image: '../img/sprite.png'
$arrow-down-h: (0px, 55px, 0px, -55px, 11px, 6px, 63px, 61px, '../img/sprite.png', 'arrow-down-h', )
$arrow-down-name: 'arrow-down'
$arrow-down-x: 11px
$arrow-down-y: 55px
$arrow-down-offset-x: -11px
$arrow-down-offset-y: -55px
$arrow-down-width: 11px
$arrow-down-height: 6px
$arrow-down-total-width: 63px
$arrow-down-total-height: 61px
$arrow-down-image: '../img/sprite.png'
$arrow-down: (11px, 55px, -11px, -55px, 11px, 6px, 63px, 61px, '../img/sprite.png', 'arrow-down', )
$data-green-name: 'data-green'
$data-green-x: 0px
$data-green-y: 34px
$data-green-offset-x: 0px
$data-green-offset-y: -34px
$data-green-width: 21px
$data-green-height: 21px
$data-green-total-width: 63px
$data-green-total-height: 61px
$data-green-image: '../img/sprite.png'
$data-green: (0px, 34px, 0px, -34px, 21px, 21px, 63px, 61px, '../img/sprite.png', 'data-green', )
$data-name: 'data'
$data-x: 21px
$data-y: 34px
$data-offset-x: -21px
$data-offset-y: -34px
$data-width: 21px
$data-height: 21px
$data-total-width: 63px
$data-total-height: 61px
$data-image: '../img/sprite.png'
$data: (21px, 34px, -21px, -34px, 21px, 21px, 63px, 61px, '../img/sprite.png', 'data', )
$mail-name: 'mail'
$mail-x: 42px
$mail-y: 34px
$mail-offset-x: -42px
$mail-offset-y: -34px
$mail-width: 21px
$mail-height: 18px
$mail-total-width: 63px
$mail-total-height: 61px
$mail-image: '../img/sprite.png'
$mail: (42px, 34px, -42px, -34px, 21px, 18px, 63px, 61px, '../img/sprite.png', 'mail', )
$view-name: 'view'
$view-x: 0px
$view-y: 0px
$view-offset-x: 0px
$view-offset-y: 0px
$view-width: 63px
$view-height: 34px
$view-total-width: 63px
$view-total-height: 61px
$view-image: '../img/sprite.png'
$view: (0px, 0px, 0px, 0px, 63px, 34px, 63px, 61px, '../img/sprite.png', 'view', )
$spritesheet-width: 63px
$spritesheet-height: 61px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-down-h, $arrow-down, $data-green, $data, $mail, $view, )
$spritesheet: (63px, 61px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
