/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$arrow-btn-name: 'arrow-btn'
$arrow-btn-x: 26px
$arrow-btn-y: 21px
$arrow-btn-offset-x: -26px
$arrow-btn-offset-y: -21px
$arrow-btn-width: 17px
$arrow-btn-height: 13px
$arrow-btn-total-width: 58px
$arrow-btn-total-height: 50px
$arrow-btn-image: '../img/sprite.png'
$arrow-btn: (26px, 21px, -26px, -21px, 17px, 13px, 58px, 50px, '../img/sprite.png', 'arrow-btn', )
$arrow-left-name: 'arrow-left'
$arrow-left-x: 30px
$arrow-left-y: 35px
$arrow-left-offset-x: -30px
$arrow-left-offset-y: -35px
$arrow-left-width: 14px
$arrow-left-height: 10px
$arrow-left-total-width: 58px
$arrow-left-total-height: 50px
$arrow-left-image: '../img/sprite.png'
$arrow-left: (30px, 35px, -30px, -35px, 14px, 10px, 58px, 50px, '../img/sprite.png', 'arrow-left', )
$arrow-right-name: 'arrow-right'
$arrow-right-x: 44px
$arrow-right-y: 35px
$arrow-right-offset-x: -44px
$arrow-right-offset-y: -35px
$arrow-right-width: 14px
$arrow-right-height: 10px
$arrow-right-total-width: 58px
$arrow-right-total-height: 50px
$arrow-right-image: '../img/sprite.png'
$arrow-right: (44px, 35px, -44px, -35px, 14px, 10px, 58px, 50px, '../img/sprite.png', 'arrow-right', )
$arrow-service-name: 'arrow-service'
$arrow-service-x: 0px
$arrow-service-y: 0px
$arrow-service-offset-x: 0px
$arrow-service-offset-y: 0px
$arrow-service-width: 25px
$arrow-service-height: 21px
$arrow-service-total-width: 58px
$arrow-service-total-height: 50px
$arrow-service-image: '../img/sprite.png'
$arrow-service: (0px, 0px, 0px, 0px, 25px, 21px, 58px, 50px, '../img/sprite.png', 'arrow-service', )
$circle-ico-active-name: 'circle-ico-active'
$circle-ico-active-x: 0px
$circle-ico-active-y: 35px
$circle-ico-active-offset-x: 0px
$circle-ico-active-offset-y: -35px
$circle-ico-active-width: 15px
$circle-ico-active-height: 15px
$circle-ico-active-total-width: 58px
$circle-ico-active-total-height: 50px
$circle-ico-active-image: '../img/sprite.png'
$circle-ico-active: (0px, 35px, 0px, -35px, 15px, 15px, 58px, 50px, '../img/sprite.png', 'circle-ico-active', )
$circle-ico-name: 'circle-ico'
$circle-ico-x: 15px
$circle-ico-y: 35px
$circle-ico-offset-x: -15px
$circle-ico-offset-y: -35px
$circle-ico-width: 15px
$circle-ico-height: 15px
$circle-ico-total-width: 58px
$circle-ico-total-height: 50px
$circle-ico-image: '../img/sprite.png'
$circle-ico: (15px, 35px, -15px, -35px, 15px, 15px, 58px, 50px, '../img/sprite.png', 'circle-ico', )
$fb-name: 'fb'
$fb-x: 46px
$fb-y: 0px
$fb-offset-x: -46px
$fb-offset-y: 0px
$fb-width: 12px
$fb-height: 21px
$fb-total-width: 58px
$fb-total-height: 50px
$fb-image: '../img/sprite.png'
$fb: (46px, 0px, -46px, 0px, 12px, 21px, 58px, 50px, '../img/sprite.png', 'fb', )
$folder-name: 'folder'
$folder-x: 46px
$folder-y: 21px
$folder-offset-x: -46px
$folder-offset-y: -21px
$folder-width: 11px
$folder-height: 10px
$folder-total-width: 58px
$folder-total-height: 50px
$folder-image: '../img/sprite.png'
$folder: (46px, 21px, -46px, -21px, 11px, 10px, 58px, 50px, '../img/sprite.png', 'folder', )
$inst-name: 'inst'
$inst-x: 25px
$inst-y: 0px
$inst-offset-x: -25px
$inst-offset-y: 0px
$inst-width: 21px
$inst-height: 21px
$inst-total-width: 58px
$inst-total-height: 50px
$inst-image: '../img/sprite.png'
$inst: (25px, 0px, -25px, 0px, 21px, 21px, 58px, 50px, '../img/sprite.png', 'inst', )
$vk-name: 'vk'
$vk-x: 0px
$vk-y: 21px
$vk-offset-x: 0px
$vk-offset-y: -21px
$vk-width: 26px
$vk-height: 14px
$vk-total-width: 58px
$vk-total-height: 50px
$vk-image: '../img/sprite.png'
$vk: (0px, 21px, 0px, -21px, 26px, 14px, 58px, 50px, '../img/sprite.png', 'vk', )
$spritesheet-width: 58px
$spritesheet-height: 50px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-btn, $arrow-left, $arrow-right, $arrow-service, $circle-ico-active, $circle-ico, $fb, $folder, $inst, $vk, )
$spritesheet: (58px, 50px, '../img/sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
