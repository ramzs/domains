/*-------------Grid-----------*/
@media (min-width: 320px) {
  .container {
    width: 320px;
  }
}

@media (min-width: 500px) {
  .container {
    width: 470px;
  }
}

@media (min-width: 768px) {
  .container {
    width: 740px;
  }
}

@media (min-width: 992px) {
  .container {
    width: 940px;
  }
}

@media (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}

@media (min-width: 1390px) {
  .container {
    width: 1390px;
  }
}

/*------------end-------------*/
/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class: */
/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
/* Large Devices, Wide Screens */
@media only screen and (max-width: 1200px) {
  /**/
}

/* Medium Devices, Desktops */
@media only screen and (max-width: 992px) {
  /**/
}

/* Small Devices, Tablets */
@media only screen and (max-width: 768px) {
  /**/
}

/* Extra Small Devices, Phones */
@media only screen and (max-width: 480px) {
  /**/
}

/* Custom, iPhone Retina */
@media only screen and (max-width: 320px) {
  /**/
}
