// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-btn-name: 'arrow-btn'
$arrow-btn-x: 0px
$arrow-btn-y: 21px
$arrow-btn-offset-x: 0px
$arrow-btn-offset-y: -21px
$arrow-btn-width: 21px
$arrow-btn-height: 22px
$arrow-btn-total-width: 59px
$arrow-btn-total-height: 43px
$arrow-btn-image: '../img/sprite.png'
$arrow-btn: (0px, 21px, 0px, -21px, 21px, 22px, 59px, 43px, '../img/sprite.png', 'arrow-btn', )
$arrow-right-name: 'arrow-right'
$arrow-right-x: 52px
$arrow-right-y: 0px
$arrow-right-offset-x: -52px
$arrow-right-offset-y: 0px
$arrow-right-width: 7px
$arrow-right-height: 11px
$arrow-right-total-width: 59px
$arrow-right-total-height: 43px
$arrow-right-image: '../img/sprite.png'
$arrow-right: (52px, 0px, -52px, 0px, 7px, 11px, 59px, 43px, '../img/sprite.png', 'arrow-right', )
$cart-h-name: 'cart-h'
$cart-h-x: 0px
$cart-h-y: 0px
$cart-h-offset-x: 0px
$cart-h-offset-y: 0px
$cart-h-width: 26px
$cart-h-height: 21px
$cart-h-total-width: 59px
$cart-h-total-height: 43px
$cart-h-image: '../img/sprite.png'
$cart-h: (0px, 0px, 0px, 0px, 26px, 21px, 59px, 43px, '../img/sprite.png', 'cart-h', )
$cart-name: 'cart'
$cart-x: 26px
$cart-y: 0px
$cart-offset-x: -26px
$cart-offset-y: 0px
$cart-width: 26px
$cart-height: 21px
$cart-total-width: 59px
$cart-total-height: 43px
$cart-image: '../img/sprite.png'
$cart: (26px, 0px, -26px, 0px, 26px, 21px, 59px, 43px, '../img/sprite.png', 'cart', )
$check-name: 'check'
$check-x: 37px
$check-y: 21px
$check-offset-x: -37px
$check-offset-y: -21px
$check-width: 10px
$check-height: 8px
$check-total-width: 59px
$check-total-height: 43px
$check-image: '../img/sprite.png'
$check: (37px, 21px, -37px, -21px, 10px, 8px, 59px, 43px, '../img/sprite.png', 'check', )
$search-name: 'search'
$search-x: 21px
$search-y: 21px
$search-offset-x: -21px
$search-offset-y: -21px
$search-width: 16px
$search-height: 15px
$search-total-width: 59px
$search-total-height: 43px
$search-image: '../img/sprite.png'
$search: (21px, 21px, -21px, -21px, 16px, 15px, 59px, 43px, '../img/sprite.png', 'search', )
$spritesheet-width: 59px
$spritesheet-height: 43px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-btn, $arrow-right, $cart-h, $cart, $check, $search, )
$spritesheet: (59px, 43px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
